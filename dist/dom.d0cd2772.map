{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","childNodes","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.d0cd2772.map","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n  create(string) {\r\n    const container = document.createElement(\"template\"); //自己创建一个\r\n    container.innerHTML = string.trim(); //这个字符串就直接变成这个字符串的内容\r\n    return container.content.firstChild; //必须这么写，返回div的第一个字符串\r\n  },\r\n  after(node, node2) {\r\n    node.parentNode.insertBefore(node2, node.nextSibling); //新增弟弟\r\n  },\r\n  before(node, node2) {\r\n    node.parentNode.insertBefore(node2, node); //新增哥哥\r\n  },\r\n  append(parent, node) {\r\n    parent.appendChild(node); //新增儿子\r\n  },\r\n  //比如说有两个div，中间再加一个div可不可以,就是再加一个爸爸\r\n  wrap(node, parent) {\r\n    dom.before(node, parent); //先把新的节点放在这个节点前面\r\n    dom.append(parent, node); //然后把div2放到div3的里面\r\n  },\r\n  remove(node) {\r\n    node.parentNode.removeChild(node);\r\n    return node;\r\n  },\r\n  empty(node) {\r\n    const { childNodes } = node;\r\n    const array = [];\r\n    let x = node.firstChild;\r\n    array.push(dom.remove(node.firstChild));\r\n    x = node.firstChild;\r\n  }, //给我一个节点，我把这个节点的儿子全部干掉,用for循环\r\n  attr(node, name, value) {\r\n    // 重载\r\n    if (arguments.length === 3) {\r\n      node.setAttribute(name, value);\r\n    } else if (arguments.length === 2) {\r\n      return node.getAttribute(name);\r\n    }\r\n  },\r\n  text(node, string) {\r\n    // 适配\r\n    if (arguments.length === 2) {\r\n      if (\"innerText\" in node) {\r\n        node.innerText = string;\r\n      } else {\r\n        node.textContent = string;\r\n      }\r\n    } else if (arguments.length === 1) {\r\n      if (\"innerText\" in node) {\r\n        return node.innerText;\r\n      } else {\r\n        return node.textContent;\r\n      }\r\n    }\r\n  },\r\n  html(node, string) {\r\n    if (arguments.length === 2) {\r\n      node.innerHTML = string;\r\n    } else if (arguments.length === 1) {\r\n      return node.innerHTML;\r\n    }\r\n  },\r\n  style(node, name, value) {\r\n    if (arguments.length === 3) {\r\n      // dom.style(div, 'color', 'red')\r\n      node.style[name] = value;\r\n    } else if (arguments.length === 2) {\r\n      if (typeof name === \"string\") {\r\n        // dom.style(div, 'color')\r\n        return node.style[name];\r\n      } else if (name instanceof Object) {\r\n        // dom.style(div, {color: 'red'})\r\n        const object = name;\r\n        for (let key in object) {\r\n          node.style[key] = object[key];\r\n        }\r\n      }\r\n    }\r\n  },\r\n  class: {\r\n    add(node, className) {\r\n      node.classList.add(className);\r\n    },\r\n    remove(node, className) {\r\n      node.classList.remove(className);\r\n    },\r\n    has(node, className) {\r\n      return node.classList.contains(className);\r\n    },\r\n  },\r\n  on(node, eventName, fn) {\r\n    node.addEventListener(eventName, fn);\r\n  },\r\n  off(node, eventName, fn) {\r\n    node.removeEventListener(eventName, fn);\r\n  },\r\n  find(selector, scope) {\r\n    return (scope || document).querySelectorAll(selector);\r\n  }, //如果有scope，我就在scope中调用querySelectorAll，如果没有就在document中调用\r\n  parent(node) {\r\n    return node.parentNode;\r\n  },\r\n  children(node) {\r\n    return node.children;\r\n  },\r\n  siblings(node) {\r\n    return Array.from(node.parentNode.children).filter((n) => n !== node);\r\n  },\r\n  next(node) {\r\n    let x = node.nextSibling;\r\n    while (x && x.nodeType === 3) {\r\n      x = x.nextSibling;\r\n    }\r\n    return x;\r\n  },\r\n  previous(node) {\r\n    let x = node.previousSibling;\r\n    while (x && x.nodeType === 3) {\r\n      x = x.previousSibling;\r\n    }\r\n    return x;\r\n  },\r\n  each(nodeList, fn) {\r\n    for (let i = 0; i < nodeList.length; i++) {\r\n      fn.call(null, nodeList[i]);\r\n    }\r\n  },\r\n  index(node) {\r\n    const list = dom.children(node.parentNode);\r\n    let i;\r\n    for (i = 0; i < list.length; i++) {\r\n      if (list[i] === node) {\r\n        break;\r\n      }\r\n    }\r\n    return i;\r\n  },\r\n};\r\n"]}